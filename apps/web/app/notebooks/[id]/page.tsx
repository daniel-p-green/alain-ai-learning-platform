import NotebookViewer from "@/components/NotebookViewer";
import NotebookActions from "@/components/NotebookActions";
import { appBaseUrl } from "@/lib/requestBase";
import { decodeNotebookParam, encodeNotebookId } from "@/lib/notebookId";

export const dynamic = "force-dynamic";

async function fetchNotebook(id: string) {
  const base = appBaseUrl();
  const res = await fetch(`${base}/api/notebooks/${encodeNotebookId(id)}`, { cache: "no-store" });
  if (!res.ok) return null;
  return res.json();
}

export default async function NotebookPage({ params, searchParams }: { params: { id: string }, searchParams?: { [k: string]: string | string[] | undefined } }) {
  const decodedId = decodeNotebookParam(params.id);
  const rec = await fetchNotebook(decodedId);
  if (!rec) {
    return <div className="mx-auto max-w-3xl p-6">Notebook not found.</div>;
  }
  const promptRemix = String(searchParams?.remix || '') === '1';
  return (
    <div className="mx-auto max-w-4xl px-4 py-10 space-y-8">
      <section className="space-y-5 rounded-3xl border border-ink-100 bg-white p-6 shadow-card">
        <div className="flex flex-col gap-4 sm:flex-row sm:items-start sm:justify-between">
          <div className="space-y-2">
            <div className="flex flex-wrap items-center gap-2 text-xs font-semibold uppercase tracking-wide text-ink-500">
              <span className="rounded-full border border-ink-100 px-2 py-0.5">{rec.meta.sourceType}</span>
              {rec.meta.sourceOrg && <span className="rounded-full border border-ink-100 px-2 py-0.5">{rec.meta.sourceOrg}</span>}
              {rec.nb?.metadata?.teacher_model_used === 'GPT-OSS-120B' ? (
                <span className="rounded-full border border-purple-200 bg-purple-50 px-2 py-0.5 text-purple-800" title={rec.nb?.metadata?.teacher_downgraded ? 'Requested 120B, downgraded by policy' : 'Generated by GPT-OSS-120B (teacher)'}>
                  Teacher: 120B
                </span>
              ) : (
                <span className="rounded-full border border-ink-200 px-2 py-0.5 text-ink-700" title="Generated by GPT-OSS-20B (teacher)">
                  Teacher: 20B
                </span>
              )}
            </div>
            <h1 className="text-3xl font-semibold tracking-tight text-ink-900">{rec.meta.title}</h1>
            {rec.nb?.metadata?.description && (
              <p className="max-w-2xl text-sm text-ink-600">{rec.nb.metadata.description}</p>
            )}
            {searchParams?.commit && (
              <p className="text-xs"><a className="text-alain-blue underline" href={String(searchParams.commit)} target="_blank" rel="noreferrer">View commit</a></p>
            )}
          </div>
          <NotebookActions id={rec.meta.id} promptRemix={promptRemix} />
        </div>
        {rec.nb?.metadata && (
          <div className="flex flex-wrap gap-3 text-xs text-ink-600">
            {rec.nb.metadata.license && <span className="rounded-full border border-ink-100 bg-paper-50 px-3 py-1">License: {rec.nb.metadata.license}</span>}
            {rec.nb.metadata.provenance_url && (
              <a className="inline-flex items-center gap-1 rounded-full border border-ink-100 bg-paper-50 px-3 py-1 text-alain-blue" href={rec.nb.metadata.provenance_url} target="_blank" rel="noreferrer">
                Source
              </a>
            )}
            {rec.nb.metadata.duration_minutes && (
              <span className="rounded-full border border-ink-100 bg-paper-50 px-3 py-1">~{rec.nb.metadata.duration_minutes} min</span>
            )}
          </div>
        )}
      </section>

      <section className="rounded-3xl border border-ink-100 bg-paper-0 p-6 shadow-card">
        <NotebookViewer nb={rec.nb} />
      </section>
    </div>
  );
}
