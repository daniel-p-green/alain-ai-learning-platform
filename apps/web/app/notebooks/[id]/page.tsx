import NotebookViewer from "@/components/NotebookViewer";
import NotebookActions from "@/components/NotebookActions";
import { appBaseUrl } from "@/lib/requestBase";
import { decodeNotebookParam, encodeNotebookId } from "@/lib/notebookId";

export const dynamic = "force-dynamic";

async function fetchNotebook(id: string) {
  const base = appBaseUrl();
  const res = await fetch(`${base}/api/notebooks/${encodeNotebookId(id)}`, { cache: "no-store" });
  if (!res.ok) return null;
  return res.json();
}

export default async function NotebookPage({ params, searchParams }: { params: { id: string }, searchParams?: { [k: string]: string | string[] | undefined } }) {
  const decodedId = decodeNotebookParam(params.id);
  const rec = await fetchNotebook(decodedId);
  if (!rec) {
    return <div className="mx-auto max-w-3xl p-6">Notebook not found.</div>;
  }
  const promptRemix = String(searchParams?.remix || '') === '1';
  return (
    <div className="mx-auto max-w-3xl p-6 space-y-6">
      <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-3">
        <div>
          <h1 className="text-2xl font-semibold">{rec.meta.title}</h1>
          <p className="text-sm text-ink-600 flex items-center gap-2">
            <span>{rec.meta.sourceType}{rec.meta.sourceOrg ? ` • ${rec.meta.sourceOrg}` : ""}</span>
            {rec.nb?.metadata?.teacher_model_used === 'GPT-OSS-120B' ? (
              <span className="inline-flex items-center text-[10px] px-1.5 py-0.5 rounded bg-purple-200 text-purple-900 border border-purple-300" title={rec.nb?.metadata?.teacher_downgraded ? 'Requested 120B, downgraded by policy' : 'Generated by GPT-OSS-120B (teacher)'}>
                Teacher: 120B
              </span>
            ) : (
              <span className="inline-flex items-center text-[10px] px-1.5 py-0.5 rounded border border-ink-200 text-ink-700" title="Generated by GPT-OSS-20B (teacher)">
                Teacher: 20B
              </span>
            )}
          </p>
          {searchParams?.commit && (
            <p className="text-xs mt-1"><a className="text-alain-blue underline" href={String(searchParams.commit)} target="_blank">View commit</a></p>
          )}
        </div>
        <NotebookActions id={rec.meta.id} promptRemix={promptRemix} />
      </div>
      {rec.nb?.metadata && (
        <div className="text-xs text-ink-600">
          {rec.nb.metadata.license && <span>License: {rec.nb.metadata.license} · </span>}
          {rec.nb.metadata.provenance_url && <a className="underline" href={rec.nb.metadata.provenance_url} target="_blank">Source</a>}
        </div>
      )}
      <NotebookViewer nb={rec.nb} />
    </div>
  );
}
