import { describe, it, expect } from 'vitest';
import { buildNotebook } from './notebook';

describe('notebook attribution', () => {
  it('adds attribution comment cell as first cell', () => {
    const meta = {
      title: 'Test Lesson',
      description: 'A test lesson',
      provider: 'poe',
      model: 'gpt-oss-20b'
    };
    
    const steps = [{
      step_order: 1,
      title: 'Step 1',
      content: 'Test content',
      code_template: 'print("hello")'
    }];
    
    const assessments: any[] = [];
    
    const notebook = buildNotebook(meta, steps, assessments);
    
    // First cell should be the attribution comment
    expect(notebook.cells[0].cell_type).toBe('markdown');
    expect(notebook.cells[0].source.join('')).toContain('Generated by ALAIN');
    expect(notebook.cells[0].source.join('')).toContain('Teacher Model: GPT-OSS-20B');
    expect(notebook.cells[0].source.join('')).toContain('Provider: poe');
    expect(notebook.cells[0].source.join('')).toContain('Target Model: gpt-oss-20b');
    expect(notebook.cells[0].source.join('')).toMatch(/\d{4}-\d{2}-\d{2}/); // Date format
  });
  
  it('includes proper notebook structure with attribution', () => {
    const meta = {
      title: 'GPT-OSS Tutorial',
      description: 'Learn to use GPT-OSS',
      provider: 'openai-compatible',
      model: 'gpt-oss-20b'
    };
    
    const steps = [{
      step_order: 1,
      title: 'Basic Usage',
      content: 'Learn basic usage',
      code_template: 'client.chat.completions.create(...)'
    }];
    
    const notebook = buildNotebook(meta, steps, []);
    
    // Should have attribution, intro, setup cells, etc.
    expect(notebook.cells.length).toBeGreaterThan(5);
    expect(notebook.nbformat).toBe(4);
    expect(notebook.nbformat_minor).toBe(5);
    
    // Check that attribution is properly formatted as HTML comment
    const attribution = notebook.cells[0].source.join('');
    expect(attribution).toMatch(/^<!--/);
    expect(attribution).toMatch(/-->\s*$/);
  });
});
