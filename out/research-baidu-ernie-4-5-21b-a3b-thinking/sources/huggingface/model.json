{"_id":"68bee5b795150f7ada435788","id":"baidu/ERNIE-4.5-21B-A3B-Thinking","private":false,"pipeline_tag":"text-generation","library_name":"transformers","tags":["transformers","safetensors","ernie4_5_moe","text-generation","ERNIE4.5","conversational","en","zh","license:apache-2.0","autotrain_compatible","endpoints_compatible","region:us"],"downloads":136069,"likes":735,"modelId":"baidu/ERNIE-4.5-21B-A3B-Thinking","author":"baidu","sha":"960d37ea466c4a1e4d09b7182e6f2740288cb76e","lastModified":"2025-09-17T03:45:08.000Z","gated":false,"disabled":false,"widgetData":[{"text":"Hi, what can you help me with?"},{"text":"What is 84 * 3 / 2?"},{"text":"Tell me an interesting fact about the universe!"},{"text":"Explain quantum computing in simple terms."}],"model-index":null,"config":{"architectures":["Ernie4_5_MoeForCausalLM"],"model_type":"ernie4_5_moe","tokenizer_config":{"bos_token":"<s>","eos_token":"</s>","pad_token":"<unk>","unk_token":"<unk>","cls_token":"<|begin_of_sentence|>","sep_token":"<|end_of_sentence|>","mask_token":"<mask:1>","chat_template":"{{- '<|im_start|>system\n' }}{%- if messages[0].role != 'system' and not system_settings %}{{- '<global_setting>\nthink_mode=True\n</global_setting>' }}{%- else%}{{- '<system_setting>\n' }}{{- system_settings + '\n' if system_settings else '' }}{{- (messages[0].content + '\n' if messages[0].role == 'system' else '') + '</system_setting>\n\n<global_setting>\nthink_mode=True\n</global_setting>' }}{%- endif %}{%- if tools %}{{- \"\n\n<tool_list>\" }}{{- '\n' }}{{-'['}}{% for tool in tools %}{{'{\"type\": \"function\", \"function\": '}}{{-(tool.function | tojson)}}}{%-if not loop.last%},{%- endif %}{%endfor%}{{-']'}}{{- \"\n</tool_list>\" }}{%- endif %}{{-'<|im_end|>\n\n' }}{%- set ns = namespace(multi_step_tool=true, last_query_index=messages|length - 1) %}\n{%- for message in messages[::-1] %}\n    {%- set index = (messages|length - 1) - loop.index0 %}\n    {%- if ns.multi_step_tool and message.role == \"user\" and message.content is string and not(message.content.startswith('<tool_output>') and message.content.endswith('</tool_output>')) %}\n        {%- set ns.multi_step_tool = false %}\n        {%- set ns.last_query_index = index %}\n    {%- endif %}\n{%- endfor %}\n{%- for message in messages %}\n    {%- if message.content is string %}\n        {%- set content = message.content %}\n    {%- else %}\n        {%- set content = '' %}\n    {%- endif %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) %}\n        {{- '<|im_start|>' + message.role + '\n' + content + '<|im_end|>' + '\n\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {%- set reasoning_content = '' %}\n        {%- if message.thoughts is string %}\n            {%- set reasoning_content = message.thoughts %}\n        {%- else %}\n            {%- if '</think>' in content %}\n                {%- set reasoning_content = content.split('</think>')[0].rstrip('\n').split('<think>')[-1].lstrip('\n') %}\n                {%- set content = content.split('</think>')[-1].lstrip('\n') %}\n            {%- endif %}\n        {%- endif %}\n        {%- if loop.index0 > ns.last_query_index and  (loop.last or (not loop.last and reasoning_content)) %} {{- '<|im_start|>' + message.role + '\n<think>\n' + reasoning_content.strip('\n') + '\n</think>\n' }} {%- else %} {{- '<|im_start|>' + message.role + '\n' }} {%- endif %}  {%- if content|length > 0 %}  {{- '<response>\n' + content + '\n</response>\n' }}  {%- endif %} {%- if message.tool_calls %}\n            {%- for tool_call in message.tool_calls %}\n                {%- if (loop.first and content) or (not loop.first) %}\n                    {{- '\n' }}\n                {%- endif %}\n                {%- if tool_call.function %}\n                    {%- set tool_call = tool_call.function %}\n                {%- endif %}\n                {{- '\n<tool_call>\n{\"name\": \"' }}\n                {{- tool_call.name }}\n                {{- '\", \"arguments\": ' }}\n                {%- if tool_call.arguments is string %}\n                    {{- tool_call.arguments }}\n                {%- else %}\n                    {{- tool_call.arguments | tojson }}\n                {%- endif %}\n                {{- '}\n</tool_call>\n' }}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|im_end|>\n\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if loop.first or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>tool' }}\n        {%- endif %}\n        {{- '\n<tool_output>' }}\n        {{- message.content|tojson }}\n        {{- '</tool_output>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\n\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n {{- \"<|im_start|>assistant\n<think>\n\"}}"},"chat_template_jinja":"{{- '<|im_start|>system\n' }}{%- if messages[0].role != 'system' and not system_settings %}{{- '<global_setting>\nthink_mode=True\n</global_setting>' }}{%- else%}{{- '<system_setting>\n' }}{{- system_settings + '\n' if system_settings else '' }}{{- (messages[0].content + '\n' if messages[0].role == 'system' else '') + '</system_setting>\n\n<global_setting>\nthink_mode=True\n</global_setting>' }}{%- endif %}{%- if tools %}{{- \"\n\n<tool_list>\" }}{{- '\n' }}{{-'['}}{% for tool in tools %}{{'{\"type\": \"function\", \"function\": '}}{{-(tool.function | tojson)}}}{%-if not loop.last%},{%- endif %}{%endfor%}{{-']'}}{{- \"\n</tool_list>\" }}{%- endif %}{{-'<|im_end|>\n\n' }}{%- set ns = namespace(multi_step_tool=true, last_query_index=messages|length - 1) %}\n{%- for message in messages[::-1] %}\n    {%- set index = (messages|length - 1) - loop.index0 %}\n    {%- if ns.multi_step_tool and message.role == \"user\" and message.content is string and not(message.content.startswith('<tool_output>') and message.content.endswith('</tool_output>')) %}\n        {%- set ns.multi_step_tool = false %}\n        {%- set ns.last_query_index = index %}\n    {%- endif %}\n{%- endfor %}\n{%- for message in messages %}\n    {%- if message.content is string %}\n        {%- set content = message.content %}\n    {%- else %}\n        {%- set content = '' %}\n    {%- endif %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) %}\n        {{- '<|im_start|>' + message.role + '\n' + content + '<|im_end|>' + '\n\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {%- set reasoning_content = '' %}\n        {%- if message.thoughts is string %}\n            {%- set reasoning_content = message.thoughts %}\n        {%- else %}\n            {%- if '</think>' in content %}\n                {%- set reasoning_content = content.split('</think>')[0].rstrip('\n').split('<think>')[-1].lstrip('\n') %}\n                {%- set content = content.split('</think>')[-1].lstrip('\n') %}\n            {%- endif %}\n        {%- endif %}\n        {%- if loop.index0 > ns.last_query_index and  (loop.last or (not loop.last and reasoning_content)) %} {{- '<|im_start|>' + message.role + '\n<think>\n' + reasoning_content.strip('\n') + '\n</think>\n' }} {%- else %} {{- '<|im_start|>' + message.role + '\n' }} {%- endif %}  {%- if content|length > 0 %}  {{- '<response>\n' + content + '\n</response>\n' }}  {%- endif %} {%- if message.tool_calls %}\n            {%- for tool_call in message.tool_calls %}\n                {%- if (loop.first and content) or (not loop.first) %}\n                    {{- '\n' }}\n                {%- endif %}\n                {%- if tool_call.function %}\n                    {%- set tool_call = tool_call.function %}\n                {%- endif %}\n                {{- '\n<tool_call>\n{\"name\": \"' }}\n                {{- tool_call.name }}\n                {{- '\", \"arguments\": ' }}\n                {%- if tool_call.arguments is string %}\n                    {{- tool_call.arguments }}\n                {%- else %}\n                    {{- tool_call.arguments | tojson }}\n                {%- endif %}\n                {{- '}\n</tool_call>\n' }}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|im_end|>\n\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if loop.first or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>tool' }}\n        {%- endif %}\n        {{- '\n<tool_output>' }}\n        {{- message.content|tojson }}\n        {{- '</tool_output>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\n\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n {{- \"<|im_start|>assistant\n<think>\n\"}}"},"cardData":{"license":"apache-2.0","language":["en","zh"],"pipeline_tag":"text-generation","tags":["ERNIE4.5"],"library_name":"transformers"},"transformersInfo":{"auto_model":"AutoModelForCausalLM","pipeline_tag":"text-generation","processor":"AutoTokenizer"},"siblings":[{"rfilename":".gitattributes"},{"rfilename":"LICENSE"},{"rfilename":"README.md"},{"rfilename":"benchmark.png"},{"rfilename":"chat_template.jinja"},{"rfilename":"config.json"},{"rfilename":"generation_config.json"},{"rfilename":"model-00001-of-00009.safetensors"},{"rfilename":"model-00002-of-00009.safetensors"},{"rfilename":"model-00003-of-00009.safetensors"},{"rfilename":"model-00004-of-00009.safetensors"},{"rfilename":"model-00005-of-00009.safetensors"},{"rfilename":"model-00006-of-00009.safetensors"},{"rfilename":"model-00007-of-00009.safetensors"},{"rfilename":"model-00008-of-00009.safetensors"},{"rfilename":"model-00009-of-00009.safetensors"},{"rfilename":"model.safetensors.index.json"},{"rfilename":"special_tokens_map.json"},{"rfilename":"tokenizer.json"},{"rfilename":"tokenizer.model"},{"rfilename":"tokenizer_config.json"}],"spaces":["umint/searchgpt","akhaliq/ERNIE-4.5-21B-A3B-Thinking","umint/image","synthetic-data-universe/synth","Merunes/HW_4","VladTruTru/Baidu-ERNIE-4.5-21B-A3B-Thinking","umint/qwen3-0.6b","Jakob08/moneychatbot"],"createdAt":"2025-09-08T14:18:31.000Z","safetensors":{"parameters":{"F32":4425408,"BF16":21821012480},"total":21825437888},"usedStorage":43674659350}